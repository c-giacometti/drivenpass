// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  email      String    @unique
  password   String
  createdAt  DateTime  @default(now()) 
  Credential Credential[]
  Note       Note[]
  Card       Card[]
  Wifi       Wifi[]
  @@map("users")
}

model Credential {
  id        Int       @id @default(autoincrement())
  title     String
  url       String
  username  String
  password  String
  createdAt DateTime  @default(now()) 
  userId    Int
  User      User      @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  @@unique([userId, title])
  @@map("credentials")
}

model Note {
  id        Int       @id @default(autoincrement())
  title     String    @db.VarChar(50)
  note      String    @db.VarChar(1000)
  createdAt DateTime  @default(now())
  userId    Int
  User      User      @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  @@unique([userId, title])
  @@map("notes")
}

enum CardType {
  credit
  debit
  both
  @@map("cardTypes")
}

model Card {
  id             Int       @id @default(autoincrement())
  title          String
  number         String
  cardHolderName String
  expirationDate String
  cvv            String
  password       String
  isVirtual      Boolean
  type           CardType
  createdAt      DateTime @default(now())
  userId         Int
  User           User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  @@unique([userId, title])
  @@map("cards")
}

model Wifi {
  id          Int       @id @default(autoincrement())
  title       String
  networkName String
  password    String
  createdAt   DateTime @default(now()) 
  userId      Int
  User        User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  @@map("wifis")
}